{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/form/form-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactUser/ContactUser.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/form/form-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactUser/ContactUser.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uid","deleteContact","filterContacts","ContactForm","state","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","labelForm","input","type","onChange","pattern","title","required","btnAddContact","Component","connect","contacts","items","dispatch","formActions","onDeleteContacts","contactItem","phone","btnDelete","onClick","normalizedFilter","filter","toLowerCase","contact","includes","list","map","e","target","inputFilter","App","formSubmitHandler","some","alert","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","onChangeFilter","createReducer","actions","_","action","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","formReducer","devTools","process","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec08517.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\",\"labelForm\":\"Filter_labelForm__1mPQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uid } from \"uuid\";\n\nconst addContact = createAction(\"form/addContact\", ({ name, number }) => {\n  return {\n    payload: {\n      id: uid(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction(\"form/deleteContact\");\n\nconst filterContacts = createAction(\"form/filterContacts\");\n\nexport default { addContact, deleteContact, filterContacts };\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handelSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handelSubmit}>\n        <label className={styles.labelForm}>\n          Name{\" \"}\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handelChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.labelForm}>\n          Number{\" \"}\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handelChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btnAddContact} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSubmit: (value) => dispatch(formActions.addContact(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactUser.module.css\";\nimport formActions from \"../../../redux/form/form-actions\";\n\nconst ContactUser = ({ id, name, number, onDeleteContacts }) => {\n  return (\n    <li className={styles.contactItem}>\n      <span className={styles.name}>{name}</span>\n      <span className={styles.phone}>{number}</span>\n      <button\n        className={styles.btnDelete}\n        type=\"button\"\n        onClick={() => onDeleteContacts(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContacts: (id) => dispatch(formActions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactUser);\n\nContactUser.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nimport ContactUser from \"./ContactUser\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactUser\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContacts={onDeleteContacts}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const filterUser = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return {\n    contacts: filterUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContacts: (id) => dispatch(formActions.deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.labelForm}>\n        Find contacts by name\n        <input\n          className={styles.inputFilter}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(formActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nimport { v4 as uid } from \"uuid\";\nimport contacts from \"./components/ContactList/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(\n        `${name} is already in contacts. Want to replace an existing contact ?`\n      );\n      return;\n    }\n    const id = uid();\n    this.setState({\n      contacts: [{ name, number, id }, ...contacts],\n      filter: \"\",\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.onChangeFilter} />\n        <ContactList\n          contacts={contacts}\n          onDeleteContacts={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./form-actions\";\n\nconst initialState = [\n  {\n    id: \"id-1\",\n    name: \"Rosie Simpson\",\n    number: \"459-12-56\",\n  },\n  {\n    id: \"id-2\",\n    name: \"Hermione Kline\",\n    number: \"443-89-12\",\n  },\n  {\n    id: \"id-3\",\n    name: \"Eden Clements\",\n    number: \"645-17-79\",\n  },\n  {\n    id: \"id-4\",\n    name: \"Annie Copeland\",\n    number: \"227-91-26\",\n  },\n];\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport formReducer from \"./form/form-reducer\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: formReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btnAddContact\":\"ContactForm_btnAddContact__2bijG\",\"labelForm\":\"ContactForm_labelForm__MA3GW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactUser_contactItem__3AgfX\",\"name\":\"ContactUser_name__21QAz\",\"phone\":\"ContactUser_phone__1zdtw\",\"btnDelete\":\"ContactUser_btnDelete__3Itj2\"};"],"sourceRoot":""}