{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/form/form-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactUser/ContactUser.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/form/form-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactUser/ContactUser.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uid","deleteContact","filterContacts","ContactForm","state","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","contacts","map","contact","includes","alert","onSubmit","resetForm","this","className","styles","form","labelForm","input","type","onChange","pattern","title","required","btnAddContact","Component","connect","items","dispatch","formActions","onDeleteContacts","contactItem","phone","btnDelete","onClick","normalizedFilter","filter","toLowerCase","list","e","target","inputFilter","App","createReducer","actions","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","formReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8733aa03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\",\"labelForm\":\"Filter_labelForm__1mPQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uid } from \"uuid\";\n\nconst addContact = createAction(\"form/addContact\", ({ name, number }) => {\n  return {\n    payload: {\n      id: uid(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction(\"form/deleteContact\");\n\nconst filterContacts = createAction(\"form/filterContacts\");\n\nexport default { addContact, deleteContact, filterContacts };\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handelSubmit = (event) => {\n    event.preventDefault();\n\n    const { name } = this.state;\n    const arrNames = this.props.contacts.map((contact) => contact.name);\n\n    arrNames.includes(name)\n      ? alert(`${name} is already in contacts`)\n      : this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handelSubmit}>\n        <label className={styles.labelForm}>\n          Name{\" \"}\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handelChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.labelForm}>\n          Number{\" \"}\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handelChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btnAddContact} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSubmit: (value) => dispatch(formActions.addContact(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactUser.module.css\";\nimport formActions from \"../../../redux/form/form-actions\";\n\nconst ContactUser = ({ id, name, number, onDeleteContacts }) => {\n  return (\n    <li className={styles.contactItem}>\n      <span className={styles.name}>{name}</span>\n      <span className={styles.phone}>{number}</span>\n      <button\n        className={styles.btnDelete}\n        type=\"button\"\n        onClick={() => onDeleteContacts(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContacts: (id) => dispatch(formActions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactUser);\n\nContactUser.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nimport ContactUser from \"./ContactUser\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactUser\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContacts={onDeleteContacts}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const filterUser = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return {\n    contacts: filterUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContacts: (id) => dispatch(formActions.deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport formActions from \"../../redux/form/form-actions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.labelForm}>\n        Find contacts by name\n        <input\n          className={styles.inputFilter}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(formActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./form-actions\";\n\nconst initialState = [\n  {\n    id: \"id-1\",\n    name: \"Rosie Simpson\",\n    number: \"459-12-56\",\n  },\n  {\n    id: \"id-2\",\n    name: \"Hermione Kline\",\n    number: \"443-89-12\",\n  },\n  {\n    id: \"id-3\",\n    name: \"Eden Clements\",\n    number: \"645-17-79\",\n  },\n  {\n    id: \"id-4\",\n    name: \"Annie Copeland\",\n    number: \"227-91-26\",\n  },\n];\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport formReducer from \"./form/form-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contact \",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, formReducer),\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\nexport default { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btnAddContact\":\"ContactForm_btnAddContact__2bijG\",\"labelForm\":\"ContactForm_labelForm__MA3GW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactUser_contactItem__3AgfX\",\"name\":\"ContactUser_name__21QAz\",\"phone\":\"ContactUser_phone__1zdtw\",\"btnDelete\":\"ContactUser_btnDelete__3Itj2\"};"],"sourceRoot":""}